<?xml version="1.0"?>
<Server port="${base.shutdown.port}"
        shutdown="SHUTDOWN">
    <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>
    <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>
    <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener"/>
    <Listener className="com.springsource.tcserver.serviceability.deploy.TcContainerDeployer"/>
    <Listener accessFile="${catalina.base}/conf/jmxremote.access"
              address="127.0.0.1"
              authenticate="false"
              className="com.springsource.tcserver.serviceability.rmi.JmxSocketListener"
              keystoreFile="${jmx-ssl.ssl.keystore.location}"
              keystorePass="${jmx-ssl.ssl.keystore.password}"
              keystoreType="${jmx-ssl.ssl.keystore.type}"
              passwordFile="${catalina.base}/conf/jmxremote.password"
              port="${base.jmx.port}"
              truststoreFile="${jmx-ssl.ssl.keystore.location}"
              truststorePass="${jmx-ssl.ssl.keystore.password}"
              useJdkClientFactory="true"
              useSSL="true"/>
    <GlobalNamingResources>
        <Resource auth="Container"
                  description="User database that can be updated and saved"
                  factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
                  name="UserDatabase"
                  pathname="conf/tomcat-users.xml"
                  type="org.apache.catalina.UserDatabase"/>
        <Resource auth="Container"
                  driverClassName="${diagnostics.jdbc.driverClassName}"
                  factory="com.springsource.tcserver.serviceability.request.DataSourceFactory"
                  initialSize="10"
                  jdbcInterceptors="ConnectionState;StatementFinalizer;SlowQueryReportJmx(threshold=10000)"
                  jmxEnabled="true"
                  logAbandoned="true"
                  maxActive="100"
                  maxWait="10000"
                  minEvictableIdleTimeMillis="30000"
                  minIdle="10"
                  name="${diagnostics.jdbc.resource.name}"
                  password="${diagnostics.jdbc.password}"
                  removeAbandoned="true"
                  removeAbandonedTimeout="60"
                  testOnBorrow="true"
                  testOnReturn="false"
                  testWhileIdle="true"
                  timeBetweenEvictionRunsMillis="5000"
                  type="javax.sql.DataSource"
                  url="${diagnostics.jdbc.url}"
                  username="${diagnostics.jdbc.username}"
                  validationInterval="30000"
                  validationQuery="SELECT 1"/>
    </GlobalNamingResources>
    <Listener className="org.apache.catalina.core.AprLifecycleListener"/>
    <Listener SSLEngine="on"
              className="org.apache.catalina.core.AprLifecycleListener"/>
    <Service name="Catalina">
        <Executor maxThreads="300"
                  minSpareThreads="50"
                  name="tomcatThreadPool"
                  namePrefix="tomcat-http--"/>
        <Engine defaultHost="localhost"
                name="Catalina">
            <Realm className="org.apache.catalina.realm.LockOutRealm">
                <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
                       resourceName="UserDatabase"/>
            </Realm>
            <Host appBase="webapps"
                  autoDeploy="true"
                  deployOnStartup="true"
                  deployXML="true"
                  name="localhost"
                  unpackWARs="true">
                <Valve className="org.apache.catalina.valves.AccessLogValve"
                       directory="logs"
                       pattern="%h %l %u %t &quot;%r&quot; %s %b"
                       prefix="localhost_access_log."
                       suffix=".txt"/>
            </Host>
            <Valve className="com.springsource.tcserver.serviceability.request.ThreadDiagnosticsValve"
                   loggingInterval="10000"
                   notificationInterval="60000"
                   threshold="10000"/>
        </Engine>
        <Connector acceptCount="100"
                   connectionTimeout="20000"
                   executor="tomcatThreadPool"
                   maxKeepAliveRequests="15"
                   port="${apr.http.port}"
                   protocol="org.apache.coyote.http11.Http11AprProtocol"
                   redirectPort="${apr.https.port}"/>
        <Connector SSLCertificateFile="${catalina.base}/${apr-ssl.ssl.certificate.location}"
                   SSLCertificateKeyFile="${catalina.base}/${apr-ssl.ssl.private.key.location}"
                   SSLCipherSuite="${apr-ssl.cipher.list}"
                   SSLEnabled="true"
                   SSLProtocol="${apr-ssl.ssl.protocol}"
                   acceptCount="100"
                   connectionTimeout="20000"
                   executor="tomcatThreadPool"
                   maxKeepAliveRequests="15"
                   port="${apr-ssl.https.port}"
                   protocol="org.apache.coyote.http11.Http11AprProtocol"
                   redirectPort="${apr-ssl.https.port}"
                   scheme="https"
                   secure="true"/>
        <Connector acceptCount="100"
                   connectionTimeout="20000"
                   executor="tomcatThreadPool"
                   maxKeepAliveRequests="15"
                   port="${nio.http.port}"
                   protocol="org.apache.coyote.http11.Http11NioProtocol"
                   redirectPort="${nio.https.port}"/>
        <Connector acceptCount="100"
                   connectionTimeout="20000"
                   executor="tomcatThreadPool"
                   port="${ajp.http.port}"
                   protocol="org.apache.coyote.ajp.AjpNioProtocol"
                   redirectPort="${ajp.https.port}"/>
        <Connector SSLEnabled="true"
                   acceptCount="100"
                   ciphers="${nio-ssl.cipher.list}"
                   connectionTimeout="20000"
                   executor="tomcatThreadPool"
                   keyAlias="${nio-ssl.ssl.key.alias}"
                   keyPass="${nio-ssl.ssl.key.password}"
                   keystoreFile="${nio-ssl.ssl.keystore.location}"
                   keystorePass="${nio-ssl.ssl.keystore.password}"
                   keystoreType="${nio-ssl.ssl.keystore.type}"
                   maxKeepAliveRequests="15"
                   port="${nio-ssl.https.port}"
                   protocol="org.apache.coyote.http11.Http11NioProtocol"
                   redirectPort="${nio-ssl.https.port}"
                   scheme="https"
                   secure="true"
                   sslProtocol="${nio-ssl.ssl.protocol}"/>
    </Service>
</Server>